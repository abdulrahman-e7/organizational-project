function _slicedToArray(arr, i) {
    return (
        _arrayWithHoles(arr) ||
        _iterableToArrayLimit(arr, i) ||
        _unsupportedIterableToArray(arr, i) ||
        _nonIterableRest()
    );
}

function _nonIterableRest() {
    throw new TypeError(
        "Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
    );
}

function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
    }
    return arr2;
}

function _iterableToArrayLimit(arr, i) {
    if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr)))
        return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;
    try {
        for (
            var _i = arr[Symbol.iterator](), _s;
            !(_n = (_s = _i.next()).done);
            _n = true
        ) {
            _arr.push(_s.value);
            if (i && _arr.length === i) break;
        }
    } catch (err) {
        _d = true;
        _e = err;
    } finally {
        try {
            if (!_n && _i["return"] != null) _i["return"]();
        } finally {
            if (_d) throw _e;
        }
    }
    return _arr;
}

function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
}

(function ($) {
    "use strict";

    $("body").on("click", "#saveData", function (e) {
        e.preventDefault();
        $('#userSettingForm input[name="next_step"]').val(0);
        $(this).addClass("loadingbar primary").prop("disabled", true);
        $("#userSettingForm").trigger("submit");
    });
    $("body").on("click", "#getNextStep", function (e) {
        e.preventDefault();
        $('#userSettingForm input[name="next_step"]').val(1);
        $(this).addClass("loadingbar primary").prop("disabled", true);
        $("#userSettingForm").trigger("submit");
    });
    $("body").on("click", "#userAddEducations", function (e) {
        e.preventDefault();
        var html = '<div id="newEducationSwlModal">';
        html += $("#newEducationModal").html();
        html += "</div>";
        Swal.fire({
            html: html,
            showCancelButton: false,
            showConfirmButton: false,
            customClass: {
                content: "p-0 text-left",
            },
            width: "36rem",
        });
    });

    $("body").on("click", "#userAddExperiences", function (e) {
        e.preventDefault();
        // alert("test1");
        var html = '<div id="newExperienceSwlModal">';
        html += $("#newExperienceModal").html();
        html += "</div>";
        Swal.fire({
            html: html,
            showCancelButton: false,
            showConfirmButton: false,
            customClass: {
                content: "p-0 text-left",
            },
            width: "36rem",
        });
    });

    $("body").on("click", "#userAddLinks", function (e) {
        e.preventDefault();
        // alert("test1");
        var html = '<div id="newLinkSwlModal">';
        html += $("#newLinkModal").html();
        html += "</div>";
        Swal.fire({
            html: html,
            showCancelButton: false,
            showConfirmButton: false,
            customClass: {
                content: "p-0 text-left",
            },
            width: "36rem",
        });
    });

    $("body").on("click", "#userAddReferences", function (e) {
        e.preventDefault();
        // alert("test1");
        var html = '<div id="newReferenceSwlModal">';
        html += $("#newReferenceModal").html();
        html += "</div>";
        Swal.fire({
            html: html,
            showCancelButton: false,
            showConfirmButton: false,
            customClass: {
                content: "p-0 text-left",
            },
            width: "36rem",
        });
    });

    $("body").on("click", ".close-swl", function (e) {
        e.preventDefault();
        Swal.close();
    });

    $("body").on("click", "#newEducationSwlModal #saveEducation", function (e) {
        e.preventDefault();
        var $this = $(this);
        $this.addClass("loadingbar primary").prop("disabled", true);
        var $input = $("#newEducationSwlModal #new_education_val");
        submitMetas($this, $input, "education");
    });
    $("body").on(
        "click",
        "#newExperienceSwlModal #saveExperience",
        function (e) {
            e.preventDefault();
            var $this = $(this);
            $this.addClass("loadingbar primary").prop("disabled", true);
            var $input = $("#newExperienceSwlModal #new_experience_val");
            var $input2 = $('#newExperienceSwlModal input[name="new_experience_val2"]:checked');

            var val = "";
            if ($input.val() !== "" && $input.val() !== null) {
                 $input.removeClass("is-invalid");
                val += `title: ${$input.val()}`;

                if ($input2.length >0 && $input2.val() !== "" && $input2.val() !== null) {
                    $("#newExperienceSwlModal #experience_val2_feedback").removeClass("d-block");
                    val += `,year: ${$input2.val()} `;
                      $input.val(val);
                      submitMetas($this, $input, "experience");
                } else {
                  $("#newExperienceSwlModal #experience_val2_feedback").addClass("d-block");
                    $this.removeClass("loadingbar primary").prop("disabled", false);

                }
            }else{
                $input.addClass("is-invalid");
                $this.removeClass("loadingbar primary").prop("disabled", false);
            }

        }
    );
    $("body").on("click", "#newLinkSwlModal #saveLink", function (e) {
        e.preventDefault();
        var $this = $(this);
        $this.addClass("loadingbar primary").prop("disabled", true);
        var $input = $("#newLinkSwlModal #new_link_val");

        submitMetas($this, $input, "link");
    });

    $("body").on("click", "#newReferenceSwlModal #saveReference", function (e) {
        e.preventDefault();
        var $this = $(this);
        $this.addClass("loadingbar primary").prop("disabled", true);
        var $inputs = $("#newReferenceSwlModal input");
        submitReference($this, $inputs);
    });

    $("body").on(
        "click",
        "#editEducationSwlModal #editEducation",
        function (e) {
            e.preventDefault();
            var $this = $(this);
            $this.addClass("loadingbar primary").prop("disabled", true);
            var $input = $("#editEducationSwlModal #new_education_val");
            var user_id = $(this).attr("data-user-id");
            var education_id = $(this).attr("data-education-id");
            var val = $input.val();

            if (val !== "" && val !== null) {
                var data = {
                    user_id: user_id,
                    value: val,
                    name: "education",
                };
                $.post(
                    "/panel/setting/metas/" + education_id + "/update",
                    data,
                    function (result) {
                        if (result && result.code == 200) {
                            Swal.fire({
                                icon: "success",
                                html:
                                    '<h3 class="font-20 text-center text-dark-blue py-25">' +
                                    saveSuccessLang +
                                    "</h3>",
                                showConfirmButton: false,
                                width: "25rem",
                            });
                            setTimeout(function () {
                                window.location.reload();
                            }, 500);
                        } else if (result.code == 403) {
                            Swal.fire({
                                icon: "error",
                                html:
                                    '<h3 class="font-20 text-center text-dark-blue py-25">' +
                                    notAccessToLang +
                                    "</h3>",
                                showConfirmButton: false,
                                width: "25rem",
                            });
                            $this
                                .removeClass("loadingbar primary")
                                .prop("disabled", false);
                        }
                    }
                ).fail(function (err) {
                    Swal.fire({
                        icon: "error",
                        html:
                            '<h3 class="font-20 text-center text-dark-blue py-25">' +
                            saveErrorLang +
                            "</h3>",
                        showConfirmButton: false,
                        width: "25rem",
                    });
                    $this
                        .removeClass("loadingbar primary")
                        .prop("disabled", false);
                });
            }
        }
    );
    $("body").on(
        "click",
        "#editExperienceSwlModal #editExperience",
        function (e) {
            e.preventDefault();
            var $this = $(this);
            $this.addClass("loadingbar primary").prop("disabled", true);
            var $input = $("#editExperienceSwlModal #new_experience_val");
            var $input2 = $(
                '#editExperienceSwlModal input[name="new_experience_val2"]:checked'
            );
            console.log($input2);

            var user_id = $(this).attr("data-user-id");
            var experience_id = $(this).attr("data-experience-id");
            var val = "";
            if ($input.val() !== "" && $input.val() !== null) {
                val += `title: ${$input.val()}`;

                if ($input2.val() !== "" && $input2.val() !== null) {
                    val += `,year: ${$input2.val()} `;
                } else {
                    val += `,year:0`;
                }
            }

            if (val !== "" && val !== null) {
                var data = {
                    user_id: user_id,
                    value: val,
                    name: "experience",
                };
                $.post(
                    "/panel/setting/metas/" + experience_id + "/update",
                    data,
                    function (result) {
                        if (result && result.code == 200) {
                            Swal.fire({
                                icon: "success",
                                html:
                                    '<h3 class="font-20 text-center text-dark-blue py-25">' +
                                    saveSuccessLang +
                                    "</h3>",
                                showConfirmButton: false,
                                width: "25rem",
                            });
                            setTimeout(function () {
                                window.location.reload();
                            }, 500);
                        } else if (result.code == 403) {
                            Swal.fire({
                                icon: "error",
                                html:
                                    '<h3 class="font-20 text-center text-dark-blue py-25">' +
                                    notAccessToLang +
                                    "</h3>",
                                showConfirmButton: false,
                                width: "25rem",
                            });
                            $this
                                .removeClass("loadingbar primary")
                                .prop("disabled", false);
                        }
                    }
                ).fail(function (err) {
                    Swal.fire({
                        icon: "error",
                        html:
                            '<h3 class="font-20 text-center text-dark-blue py-25">' +
                            saveErrorLang +
                            "</h3>",
                        showConfirmButton: false,
                        width: "25rem",
                    });
                    $this
                        .removeClass("loadingbar primary")
                        .prop("disabled", false);
                });
            } else {
                $input.addClass("is-invalid");
                $input2.addClass("is-invalid");
                $this.removeClass("loadingbar primary").prop("disabled", false);
            }
        }
    );
    $("body").on("click", "#editLinkSwlModal #editLink", function (e) {
        e.preventDefault();
        var $this = $(this);
        $this.addClass("loadingbar primary").prop("disabled", true);
        var $input = $("#editLinkSwlModal #new_link_val");
        var user_id = $(this).attr("data-user-id");
        var link_id = $(this).attr("data-link-id");
        var val = $input.val();

        if (val !== "" && val !== null) {
            var data = {
                user_id: user_id,
                value: val,
                name: "link",
            };
            $.post(
                "/panel/setting/metas/" + link_id + "/update",
                data,
                function (result) {
                    if (result && result.code == 200) {
                        Swal.fire({
                            icon: "success",
                            html:
                                '<h3 class="font-20 text-center text-dark-blue py-25">' +
                                saveSuccessLang +
                                "</h3>",
                            showConfirmButton: false,
                            width: "25rem",
                        });
                        setTimeout(function () {
                            window.location.reload();
                        }, 500);
                    } else if (result.code == 403) {
                        Swal.fire({
                            icon: "error",
                            html:
                                '<h3 class="font-20 text-center text-dark-blue py-25">' +
                                notAccessToLang +
                                "</h3>",
                            showConfirmButton: false,
                            width: "25rem",
                        });
                        $this
                            .removeClass("loadingbar primary")
                            .prop("disabled", false);
                    }
                }
            ).fail(function (err) {
                Swal.fire({
                    icon: "error",
                    html:
                        '<h3 class="font-20 text-center text-dark-blue py-25">' +
                        saveErrorLang +
                        "</h3>",
                    showConfirmButton: false,
                    width: "25rem",
                });
                $this.removeClass("loadingbar primary").prop("disabled", false);
            });
        } else {
            $input.addClass("is-invalid");
            $this.removeClass("loadingbar primary").prop("disabled", false);
        }
    });
    $("body").on("click", "#editReferenceSwlModal #editReference", function (e) {
        e.preventDefault();
        var $this = $(this);
        $this.addClass("loadingbar primary").prop("disabled", true);
        var user_id = $(this).attr("data-user-id");
        var reference_id = $(this).attr("data-reference-id");
       var $inputs = $("#editReferenceSwlModal input");

       var inputValues = {};
       $.map($inputs, function (input) {
           var $input = $(input);
           var name = $input.attr("name");
           if (name) {
               inputValues[name] = $input.val();
           }
           return input;
       });

       var emptyInputs = $inputs.filter(function () {
           return $(this).val().trim() === ""; // Use trim to ignore spaces
       });

        if (emptyInputs.length<=0) {
            var data = {
                user_id: user_id,
               ...inputValues,
            };

            $.post(
                "/panel/setting/references/" + reference_id + "/update",
                data,
                function (result) {
                    if (result && result.code == 200) {
                        Swal.fire({
                            icon: "success",
                            html:
                                '<h3 class="font-20 text-center text-dark-blue py-25">' +
                                saveSuccessLang +
                                "</h3>",
                            showConfirmButton: false,
                            width: "25rem",
                        });
                        setTimeout(function () {
                            window.location.reload();
                        }, 500);
                    } else if (result.code == 403) {
                        Swal.fire({
                            icon: "error",
                            html:
                                '<h3 class="font-20 text-center text-dark-blue py-25">' +
                                notAccessToLang +
                                "</h3>",
                            showConfirmButton: false,
                            width: "25rem",
                        });
                        // $this
                        //     .removeClass("loadingbar primary")
                        //     .prop("disabled", false);
                    }
                }
            ).fail(function (err) {
                Swal.fire({
                    icon: "error",
                    html:
                        '<h3 class="font-20 text-center text-dark-blue py-25">' +
                        saveErrorLang +
                        "</h3>",
                    showConfirmButton: false,
                    width: "25rem",
                });
                $this.removeClass("loadingbar primary").prop("disabled", false);
            });
        } else {
            emptyInputs.addClass("is-invalid");
            $this.removeClass("loadingbar primary").prop("disabled", false);
        }
    });
    $("body").on("click", ".edit-education", function (e) {
        e.preventDefault();
        var user_id = $(this).attr("data-user-id");
        var education_id = $(this).attr("data-education-id");
        var education_value = $(this)
            .closest(".education-card")
            .find(".education-value")
            .text();
        var html = '<div id="editEducationSwlModal">';
        html += $("#newEducationModal").html();
        html += "</div>";
        Swal.fire({
            html: html,
            showCancelButton: false,
            showConfirmButton: false,
            customClass: {
                content: "p-0 text-left",
            },
            width: "36rem",
            onOpen: function onOpen() {
                var editEducationSwlModal = $("#editEducationSwlModal");
                editEducationSwlModal
                    .find("#new_education_val")
                    .val(education_value);
                editEducationSwlModal
                    .find(".section-title")
                    .text(editEducationLang);
                var saveBtn = editEducationSwlModal.find("#saveEducation");
                saveBtn.attr("data-user-id", user_id);
                saveBtn.attr("data-education-id", education_id);
                saveBtn.attr("id", "editEducation");
            },
        });
    });
    $("body").on("click", ".edit-experience", function (e) {
        e.preventDefault();
        var user_id = $(this).attr("data-user-id");
        var experience_id = $(this).attr("data-experience-id");
        var experience_value = $(this)
            .closest(".experience-card")
            .find(".experience-value")
            .attr("experience-value");

        let pattern = /title:\s*([^,]+),\s*year:\s*(.+)/;


        // Perform the match
        let matches = experience_value.match(pattern);
        let val = experience_value;
        let val2 = experience_value;
        if (matches) {
            val = matches[1];
            val2 = matches[2];
        }
        var html = '<div id="editExperienceSwlModal">';
        html += $("#newExperienceModal").html();
        html += "</div>";
        Swal.fire({
            html: html,
            showCancelButton: false,
            showConfirmButton: false,
            customClass: {
                content: "p-0 text-left",
            },
            width: "36rem",
            onOpen: function onOpen() {
                var editExperienceSwlModal = $("#editExperienceSwlModal");
                editExperienceSwlModal.find("#new_experience_val").val(val);
                // Uncheck all inputs with the name `new_experience_val2`
                $('#editExperienceSwlModal input[name="new_experience_val2"]').prop("checked", false);

                // Check the input with the specific value
                $('#editExperienceSwlModal input[name="new_experience_val2"][value="' + val2.trim() +'"]').prop("checked", true);
                editExperienceSwlModal
                    .find(".section-title")
                    .text(editExperienceLang);
                var saveBtn = editExperienceSwlModal.find("#saveExperience");
                saveBtn.attr("data-user-id", user_id);
                saveBtn.attr("data-experience-id", experience_id);
                saveBtn.attr("id", "editExperience");
            },
        });
    });

    $("body").on("click", ".edit-link", function (e) {
        e.preventDefault();
        var user_id = $(this).attr("data-user-id");
        var link_id = $(this).attr("data-link-id");
        var link_value = $(this)
            .closest(".link-card")
            .find(".link-value")
            .attr("link-value");

        var html = '<div id="editLinkSwlModal">';
        html += $("#newLinkModal").html();
        html += "</div>";
        Swal.fire({
            html: html,
            showCancelButton: false,
            showConfirmButton: false,
            customClass: {
                content: "p-0 text-left",
            },
            width: "36rem",
            onOpen: function onOpen() {
                var editLinkSwlModal = $("#editLinkSwlModal");
                editLinkSwlModal.find("#new_link_val").val(link_value);
                editLinkSwlModal
                    .find(".section-title")
                    .text("تعديل رابط اعمال");
                var saveBtn = editLinkSwlModal.find("#saveLink");
                saveBtn.attr("data-user-id", user_id);
                saveBtn.attr("data-link-id", link_id);
                saveBtn.attr("id", "editLink");
            },
        });
    });

    $("body").on("click", ".edit-reference", function (e) {
        e.preventDefault();
        var user_id = $(this).attr("data-user-id");
        var reference_id = $(this).attr("data-reference-id");
        var reference_value = JSON.parse($(this)
            .closest(".reference-card")
            .find(".reference-value")
            .attr("reference-value"));

        var html = '<div id="editReferenceSwlModal">';
        html += $("#newReferenceModal").html();
        html += "</div>";
        Swal.fire({
            html: html,
            showCancelButton: false,
            showConfirmButton: false,
            customClass: {
                content: "p-0 text-left",
            },
            width: "36rem",
            onOpen: function onOpen() {
                var editReferenceSwlModal = $("#editReferenceSwlModal");
                editReferenceSwlModal.find("#reference_name").val(reference_value['name']);
                editReferenceSwlModal.find("#reference_email").val(reference_value['email']);
                editReferenceSwlModal.find("#reference_job_title").val(reference_value['job_title']);
                editReferenceSwlModal.find("#reference_workplace").val(reference_value['workplace']);
                editReferenceSwlModal.find("#reference_relationship").val(reference_value['relationship']);
                editReferenceSwlModal
                    .find(".section-title")
                    .text("تعديل بيانات معرف");
                var saveBtn = editReferenceSwlModal.find("#saveReference");
                saveBtn.attr("data-user-id", user_id);
                saveBtn.attr("data-reference-id", reference_id);
                saveBtn.attr("id", "editReference");
            },
        });
    });

    function submitMetas($this, $input, name) {
        var val = $input.val();
        $input.removeClass("is-invalid");
        var user_id = null;

        if ($("input#userId").length) {
            user_id = $("input#userId").val();
        }

        if (val !== "" && val !== null) {
            var data = {
                name: name,
                value: val,
                user_id: user_id,
            };
            $.post("/panel/setting/metas", data, function (result) {
                if (result && result.code == 200) {
                    Swal.fire({
                        icon: "success",
                        html:
                            '<h3 class="font-20 text-center text-dark-blue py-25">' +
                            saveSuccessLang +
                            "</h3>",
                        showConfirmButton: false,
                        width: "25rem",
                    });
                    setTimeout(function () {
                        window.location.reload();
                    }, 500);
                }
            }).fail(function (err) {
                Swal.fire({
                    icon: "error",
                    html:
                        '<h3 class="font-20 text-center text-dark-blue py-25">' +
                        saveErrorLang +
                        "</h3>",
                    showConfirmButton: false,
                    width: "25rem",
                });
                $this.removeClass("loadingbar primary").prop("disabled", false);
            });
        } else {
            $input.addClass("is-invalid");
            $this.removeClass("loadingbar primary").prop("disabled", false);
        }
    }

    function submitReference($this, $inputs) {

        $inputs.removeClass("is-invalid");
         var user_id = null;

         if ($("input#userId").length) {
             user_id = $("input#userId").val();
         }

        var inputValues = {};
        $.map($inputs, function (input) {
            var $input = $(input);
            var name = $input.attr("name");
            if (name) {
                inputValues[name] = $input.val();
            }
            return input;
        });

        var emptyInputs = $inputs.filter(function () {
            return $(this).val().trim() === ""; // Use trim to ignore spaces
        });

        if (emptyInputs.length<=0) {
            var data = {
                user_id: user_id,
                ...inputValues,
            };
            
            $.post("/panel/setting/references", data, function (result) {

                if (result && result.code == 200) {
                    Swal.fire({
                        icon: "success",
                        html:
                            '<h3 class="font-20 text-center text-dark-blue py-25">' +
                            saveSuccessLang +
                            "</h3>",
                        showConfirmButton: false,
                        width: "25rem",
                    });
                    setTimeout(function () {
                        window.location.reload();
                    }, 500);
                }
            }).fail(function (err) {
                console.log(err);
                Swal.fire({
                    icon: "error",
                    html:
                        '<h3 class="font-20 text-center text-dark-blue py-25">' +
                        saveErrorLang +
                        "</h3>",
                    showConfirmButton: false,
                    width: "25rem",
                });
                $this.removeClass("loadingbar primary").prop("disabled", false);
            });
        } else {
            emptyInputs.addClass("is-invalid");
            $this.removeClass("loadingbar primary").prop("disabled", false);
        }
    }

    $("body").on("change", ".js-user-bank-input", function (e) {
        e.preventDefault();
        var $optionSelected = $(this).find("option:selected");
        var specifications = $optionSelected.attr("data-specifications");
        var $card = $(".js-bank-specifications-card");
        var html = "";

        if (specifications) {
            Object.entries(JSON.parse(specifications)).forEach(function (
                _ref,
                key
            ) {
                var _ref2 = _slicedToArray(_ref, 2),
                    index = _ref2[0],
                    item = _ref2[1];

                html +=
                    '<div class="form-group">\n' +
                    '         <label class="font-weight-500 text-dark-blue">' +
                    item +
                    "</label>\n" +
                    '         <input type="text" name="bank_specifications[' +
                    index +
                    ']" value="" class="form-control"/>\n' +
                    " </div>";
            });
        }

        $card.html(html);
    });
})(jQuery);
